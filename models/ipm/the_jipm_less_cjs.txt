model{
  # IPM -- Built for the Starkey elk herd in Main Study
  # Kenneth Loonam
  # Parameters to estimate:
  # R: recruitment
  # S: survival (C, F, and M stand for calf, female, and male)
  # N: abundance (C, F, and M stand for calf, female, and male)
  
  # Estimated parameters are CAPITALIZED
  # Data parameters are lowercase
  # Index information is the exception, e.g. N_e
  
  # N_e = expected number
  # N_man = net change from management
  # N_S = N ____ surviving
  # N__est = estimates of N_ passed as data
    # indexed by observation (row), and columns = {(1)year (2)mean (3)sd}
  # r_dt = recruitment data
    # indexed by observation (row), and columns = {(1)year (2)calves (3)cows}
  
  #Process Model================================================================
  for(t in 2:n_year){
    ##### Recruitment #####
    # Expected recruitment for normal approximation
    NCe_mean[t] <- R[t] * NF[t]
    NCe_tau[t]   <- 1/(R[t] * NF[t] * (1 - R[t]))
    
    # Recruitment process
    NC[t] ~ dnorm(NCe_mean[t], NCe_tau[t])T(NCmin[t], NF[t])
    
    ##### Survival #####
    # Expected survival for normal approximation 
    # N_aug_max: survival process cannot increase N
    ## Calf survival - expected
    NCaug_max[t] <- NC[t-1] + NCman[t]
    NCSe_mean[t] <- NCaug_max[t] * SC[t]
    NCSe_tau[t] <- 1 / (NCSe_mean[t] * (1 - SC[t]))
    ## Female survival - expected
    NFaug_max[t] <- NF[t-1] + NFman[t]
    NFSe_mean[t] <- NFaug_max[t] * SF[t]
    NFSe_tau[t] <- 1 / (NFSe_mean[t] * (1 - SF[t]))
    ## Male survival - expected
    NMaug_max[t] <- NM[t-1] + NMman[t]
    NMSe_mean[t] <- NMaug_max[t] * SM[t]
    NMSe_tau[t] <- 1 / (NMSe_mean[t] * (1 - SM[t]))
    
    # Survival process - make it to August 1 (start of hunting season)
    NCaug[t] ~ dnorm(NCSe_mean[t], NCSe_tau[t])T(NCmin[t], NCaug_max[t])
    NFaug[t] ~ dnorm(NFSe_mean[t], NFSe_tau[t])T(NFmin[t], NFaug_max[t])
    NMaug[t] ~ dnorm(NMSe_mean[t], NMSe_tau[t])T(NMmin[t], NMaug_max[t])
    
    # Harvest process - make it to November 1 (biological year start)
    NF[t] <- NFaug[t] + NCaug[t]/2 - NFhar[t]
    NM[t] <- NMaug[t] + NCaug[t]/2 - NMhar[t]
    
    ##### Abundance #####
    # Expected abundance ignoring management & harvest - for calculating lambda
    NCSe_lambda[t] <- NC[t-1] * SC[t]
    NFe_lambda[t]  <- NF[t-1] * SF[t] + NCSe_lambda[t] / 2
    NMe_lambda[t]  <- NM[t-1] * SM[t] + NCSe_lambda[t] / 2
    NCe_lambda[t]  <- (NFe_lambda[t] + NCSe_lambda[t]) * R[t]
    N_lambda[t]    <- NCe_lambda[t] + NMe_lambda[t] + NFe_lambda[t]
    LAMBDA[t] <- N_lambda[t] / Ntot[t-1]
    
    # Total abundance
    Ntot[t] <- NM[t] + NF[t] + NC[t]
  }
  #Priors and GLMs==============================================================
  ##### Recruitment #####
  # Random intercept setup
  R_B0_mean ~ dlogis(0, 1)T(-5, 5)
  R_B0_sd ~ dunif(0, 5)
  R_B0_tau <- 1 / R_B0_sd^2
  
  # Covariates on recruitment
  R_Bvy ~ dlogis(0, 1)T(-5, 5) # veg proxy in year t
  R_Bvm ~ dlogis(0, 1)T(-5, 5) # veg proxy in year t-1
  R_Bpu ~ dlogis(0, 1)T(-5, 5) # puma index
  R_Bdd ~ dlogis(0, 1)T(-5, 5) # elk density
  
  # Annual recruitment assignment
  for(t in 2:n_year){
    R_B0[t] ~ dnorm(R_B0_mean, R_B0_tau)T(-5, 5)
    logit(R[t]) <- R_B0[t] + 
      R_Bvy * veg[t] +
      R_Bvm * veg[t-1] +
      R_Bpu * pum[t] +
      R_Bdd * elk[t]
  }
  
  ##### Survival #####
  # Random intercept setup -- Survival
  SC_B0_mean ~ dlogis(0, 1)T(-5, 5)
  # SF_mean ~ dbeta(3, 1.2)
  # SM_mean ~ dbeta(3, 1.2)
  SF_B0_mean ~ dlogis(1.3, .8)T(-5, 5)
  SM_B0_mean ~ dlogis(1.3, .8)T(-5, 5)
  SC_B0_sd ~ dunif(0, 5)
  SF_B0_sd ~ dunif(0, 5)
  SM_B0_sd ~ dunif(0, 5)
  SC_B0_tau <- 1 / SC_B0_sd^2
  SF_B0_tau <- 1 / SF_B0_sd^2
  SM_B0_tau <- 1 / SM_B0_sd^2
  
  # Random intercept setup -- Detection probability
  # PF_B0_mean ~ dlogis(0, 1)
  # PM_B0_mean ~ dlogis(0, 1)
  # PF_B0_sd ~ dunif(0, 5)
  # PM_B0_sd ~ dunif(0, 5)
  
  # Covariates on calf survival
  SC_Bvy ~ dlogis(0, 1)T(-5, 5) # veg proxy in year t
  SC_Bvm ~ dlogis(0, 1)T(-5, 5) # veg proxy in year t-1
  SC_Bpu ~ dlogis(0, 1)T(-5, 5) # puma index
  SC_Bdd ~ dlogis(0, 1)T(-5, 5) # elk density
  
  # Fixed effects for non-Main Study elk (some switch back and forth)
  # S__Bhe ~ dlogis(0, 1)
  # P__Bhe ~ dlogis(0, 1)
  
  # Annual survival assignment
  for(t in 2:n_year){
    SF_B0[t] ~ dnorm(SF_B0_mean, SF_B0_tau)T(-5, 5)
    SM_B0[t] ~ dnorm(SM_B0_mean, SM_B0_tau)T(-5, 5)
    SC_B0[t] ~ dnorm(SC_B0_mean, SC_B0_tau)T(-5, 5)
    
    # PM_B0[t] ~ dnorm(PM_B0_mean, sd = PM_B0_sd)
    # PF_B0[t] ~ dnorm(PF_B0_mean, sd = PF_B0_sd)
    
    logit(SF[t]) <- SF_B0[t]
    logit(SM[t]) <- SM_B0[t]
    # logit(PF[t]) <- PF_B0[t]
    # logit(PM[t]) <- PM_B0[t]
    SC_Byr[t]    <- SC_B0[t] +
      SC_Bvy * veg[t] +
      SC_Bvm * veg[t-1] +
      SC_Bpu * pum[t] +
      SC_Bdd * elk[t]
    logit(SC[t]) <- SC_Byr[t]
  }
  
  ##### Starting Abundance #####
  NC[1] ~ dnorm(nc1e, 0.0001)T(nc1e_min, )
  NF[1] ~ dnorm(nf1e, 0.0001)T(nf1e_min, )
  NM[1] ~ dnorm(nm1e, 0.0001)T(nm1e_min, )
  
  #Observation Models===========================================================
  ##### Abundance #####
  for(i in 1:nNC){ 
    NC_est[i,1] ~ dnorm(NC[NC_est_t[i]], NC_est[i,2])T(0, )
  }
  for(i in 1:nNF){
    NF_est[i,1] ~ dnorm(NF[NF_est_t[i]], NF_est[i,2])T(0, )
  }
  for(i in 1:nNM){
    NM_est[i,1] ~ dnorm(NM[NM_est_t[i]], NM_est[i,2])T(0, )
  }
  
  ##### Counts #####
  sd_afcount ~ dnorm(0, 0.0001)T(0, 100)
  tau_afcount <- 1 / sd_afcount^2
  for(i in 1:nn_fc){
    af_count[i] ~ dnorm(NFaug[af_count_t[i]], sd = sd_afcount)T(0, )
  }
  sd_amcount ~ dnorm(0, 0.0001)T(0, 100)
  tau_amcount <- 1 / sd_amcount^2
  for(i in 1:nn_mc){
    am_count[i] ~ T(dnorm(NMaug[am_count_t[i]], sd = sd_amcount)0, )
  }
  # for(t in 2:n_year){ # loop over number of observations - no P in year 1
  #   # prep normal approximation of binomial based on cjs p and NF
  #   NFct_sd[t] <- sqrt(PF[t] * NF[t] * (1 - PF[t]))
  #   NFct_ex[t] <- PF[t] * NF[t]
  #   NF_ct[t] ~ dnorm(NFct_ex[t], sd = NFct_sd[t])
  # }
  # for(t in 2:n_year){ # loop over number of observations - no P in year 1
  #   # prep normal approximation of binomial based on cjs p and NF
  #   NMct_sd[t] <- sqrt(PM[t] * NM[t] * (1 - PM[t]))
  #   NMct_ex[t] <- PM[t] * NM[t]
  #   NM_ct[t] ~ dnorm(NMct_ex[t], sd = NMct_sd[t])
  # }
  
  ##### Recruitment #####
  for(i in 1:nR){ # loop over number of observations of recruitment
    r_dt[i,1] ~ dbinom(R[r_dt_t[i]], r_dt[i,2])
  }
  
  ##### Survival #####
  # CJS - Feedgrounds
  for(i in 1:nsc){
    sc_cjs[i,1] ~ dnorm(SC[sc_cjs_t[i]], sc_cjs[i,2])T(0, 1)
  }
  for(i in 1:nsf){
    sf_cjs[i,1] ~ dnorm(SF[sf_cjs_t[i]], sf_cjs[i,2])T(0, 1)
  }
  for(i in 1:nsm){
    sm_cjs[i,1] ~ dnorm(SM[sm_cjs_t[i]], sm_cjs[i,2])T(0, 1)
  }
  
  # for(i in 1:nind){
  #   for(t in (f[i]+1):l[i]){
  #     # Setting Probabilities
  #     logit(p[i,t]) <- PF_B0[t] * female[i,t-1] + 
  #       PM_B0[t] * male[i,t-1] + 
  #       P__Bhe * herd[i,t-1]
  #     logit(s[i,t]) <- SF_B0[t] * female[i,t-1] +
  #       SM_B0[t] * male[i,t-1] +
  #       SC_Byr[t] * calf[i,t-1] +
  #       S__Bhe * herd[i,t-1]
  #     
  #     # State Process ------- alive >>> z = 1
  #     z[i,t] ~ dbern(s[i,t] * z[i,t-1])
  #     # Observation Process ------- seen >>> y = 1
  #     y[i,t] ~ dbern(p[i,t] * z[i,t])
  #   }
  # }
}