model{
# Starkey Elk IPM
# Unless otherwise specified, these organizational rules apply:
  # Papameters to estimate are UPPERCASE
  # Date is lowercase
  # Indexing follows [age, sex, year] 
    # When in doubt, remember alphabetical order
    # Age index represents year of life
      # e.g. 1 >> born in previous spring, aka, in first year of life
    # Sex: 1 = Female, 2 = Male

###################################
########## Process Model ##########
###################################
for(t in 2:nyr){

  ########## Recruitment  Process ##########
  N[1,,t] <- R[t] * sum(N[2:max_age,1,t]) * 0.5
  NL[1,,t] <- R[t] * sum(NL[2:max_age,1,t]) * 0.5
  
  ########## Survival Process ##########
  for(x in 1:2){
    N_ADDED[1,x,t] <- n_c_added[t] / 2
    for(a in 2:max_age){
      PROPORTION[a,x,t] <- N[a-1,x,t-1] / sum(N[2:max_age,x,t-1])
      N_ADDED[a,x,t] <- n_a_added[x,t] * PROPORTION[a,x,t]
      N_AUGUST[a,x,t] <- N[a-1,x,t-1] + N_ADDED[a-1,x,t] * S[a,x,t]
      N[a,x,t] <- N_AUGUST[a,x,t] - n_har[a,x,t]
      NL[a,x,t] <- N[a,x,t-1] * S[a,x,t]
    } a (age)
  } x (sex)
  
  ########## Abundance Tracking #########
  NF[t] <- sum(2:max_age, 1, t)
  NM[t] <- sum(2:max_age, 2, t)
  NC[t] <- sum(1, 1:2, t)
  NT[1,t] <- NC[t]
  NT[2,t] <- NF[t]
  NT[3,t] <- NM[t]
  Ntot[t] <- NC[t] + NF[t] + NM[t]
  LAMBDA[t] <- sum(NL[1:max_age, 1:2, t]) / NT[t-1]
} t (year)  
MEAN_LAMBDA <- prod(LAMBDA[2:nyr])^(1/(nyr-1))


########################################
########## Observation Models ##########
########################################
# Data are indexed by row (i), with one observation per row
# The columns for the data follow [class, year, mean, tau]
  # Class follows:
    # 1 = calves
    # 2 = females
    # 3 = males
  # data[i,2] = year ith row applies to
  # data[i,3] = mean of estimate from ith row

########## Abundance Obsrvations ##########
for(i in 1:nn){
  est_n[i,3] ~ dnorm(NT[est_n[i,1],est_n[i,2]], est_n[i,4])T(0,)
} i (observation row)

########## Survival Observations ##########
for(i in 1:ns){
  est_bs[i,3] ~ dnorm(ST[est_s[i,1],est_s[i,2]], est_s[i,4])T(0,)
} i (observation row)

########## Recruitment Observations ##########
for(i in 1:nr){
  est_br[i,3] ~ dnorm(RT[est_s[i,2]], est_s[i,4])T(0,)
} i (observation row)

########## Count Observations ##########
for(i in 1:nc){
  # here, cjs_c[,4] is capture probability from the cjs model
  cjs_c[i,3] ~ dbinom(cjs_c[i,4], NT[cjs_c[i,1], cjs_c[i,2]])
} i (observation row)

#####################################
########## Priors and GLMs ##########
#####################################

########## Recruitment ##########
# Random Effects
sd_R ~ dnorm(0, 0.25)T(0, 5)
tau_R <- 1/sd_R^2

# Fixed Effects
R_B0 ~ dlogis(0, 1)T(-2, 2)
R_WT ~ dlogis(0, 1)T(-2, 2)
R_WM ~ dlogis(0, 1)T(-2, 2)
R_CG ~ dlogis(0, 1)T(-2, 2)
R_DD ~ dlogis(0, 1)T(-2, 2)

# GLM
for(t in 2:nyr){
  R_YR[t] ~ dnorm(0, tau_R)T(-2, 2)
  logit(R[t]) <- R_B0 +
    R_WT * clim[t] +
    R_WM * clim[t-1] +
    R_CG * puma[t] +
    R_DD * nelk[t] +
    R_YR[t]
} t (year)
  
########## Survival ##########
# Random Effects
sd_SC ~ dnorm(0, 0.25)T(0, 5)
sd_SF ~ dnorm(0.83, 45.64)T(0, 5)
sd_SM ~ dnorm(0.84, 33.50)T(0, 5)

tau_SC <- 1/sd_SC^2
tau_SF <- 1/sd_SF^2
tau_SM <- 1/sd_SM^2
  
# Fixed Effects
SC_B0 ~ dlogis(0, 1)T(-3, 3)
SF_B0 ~ dlogis(2.53, 1/.38)T(-1, )
SM_B0 ~ dlogis(1.47, 1/.34)T(-1, )

SC_WT ~ dlogis(0, 1)T(-2, 2)
SC_WM ~ dlogis(0, 1)T(-2, 2)
SC_CG ~ dlogis(0, 1)T(-2, 2)
SC_DD ~ dlogis(0, 1)T(-2, 2)

# GLMs
for(t in 2:nyr){
  SC_YR[t] ~ dnorm(0, tau_SC)T(-3, 3)
  SF_YR[t] ~ dnrom(0, tau_SF)
  SM_YR[t] ~ dnorm(0, tau_SM)
  
  logit(SC[t]) <- SC_B0 +
    SC_WT * clim[t] +
    SC_WM * clim[t-1] +
    SC_CG * puma[t] +
    SC_DD * nelk[t] +
    SC_YR[t]
  logit(SF[t]) <- SF_B0 + SF_YR[t]
  logit(SM[t]) <- SM_B0 + SM_YR[t]
  
  S[1,1:2,t] <- SC[t]
  S[2:max_age,1,t] <- SF[t]
  S[2:max_age,2,t] <- SM[t]
} t (year)

######################################## 
########## Starting Abundance ##########
########################################
for(x in 1:2){ # x
  for(a in 1:max_age){ # a
    N[a,x,1] ~ dnorm(est_n1[a,x], 0.0001)T(min_n1[a,x],)
  } # a
} # x

###############################
########## Model End ##########
###############################

}